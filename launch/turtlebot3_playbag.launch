<launch>
  <arg name="model" default="waffle_pi"/>
  <arg name="bag_path" default="/home/ines/robotica/intro_robotics/src/turtlebot3_datasets/data/fixed_slam_easy.bag"/>
  <arg name="ekf_config" default="/home/ines/robotica/intro_robotics/src/turtlebot3_datasets/launch/ekfconfig.yaml"/>

  <!-- Use simulated time -->
  <param name="/use_sim_time" value="true"/>

  <!-- Turtlebot3 nodes if needed -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)"/>
  </include>

  <!-- Map server -->
  <node pkg="map_server" type="map_server" name="map_server"
        args="/home/ines/robotica/intro_robotics/src/turtlebot3_datasets/data/map.yaml"/>

  <!-- Publish ground truth path -->
  <node pkg="turtlebot3_datasets" type="publish_groundtruth_path.py" name="publish_groundtruth_path" output="screen"/>

  <!-- Publish EKF path -->
  <node pkg="turtlebot3_datasets" type="estimated_path.py" name="estimated_path" output="screen"/>

<node pkg="tf2_ros" type="static_transform_publisher" name="mocap_to_map" 
    args="0.935 1.34 -0.023 0.001 -0.003 0.737 0.676 mocap map"
  />

  <!-- Map â†’ odom -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom"
        args="0 0 0 0 0 0 map odom"/>


  <!-- EKF node -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_local">
    <rosparam command="load" file="$(arg ekf_config)" />
  </node>


  <!-- Play bag -->
  <node pkg="rosbag" type="play" name="rosbag_player"
        args="--clock $(arg bag_path)" />

  <!-- EKF error logger -->
  <!--node pkg="turtlebot3_datasets" type="calculate_error.py" name="calculate_error" output="screen">
    <param name="groundtruth_topic" value="/groundtruth_path"/>
    <param name="estimated_topic" value="/estimated_path"/>
  </node-->

  <!-- RViz -->
  <node pkg="rviz" type="rviz" name="rviz" required="true"/>
</launch>
